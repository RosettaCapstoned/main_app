import { Store } from 'redux';
import * as Actions from './actions';
import * as ScreenSharingHelpers from './lib/Screensharing';
import { default as reducer, State } from './reducers';
import * as Selectors from './Selectors';
import Audio from './components/Audio';
import ChatComposers from './components/ChatComposers';
import ChatInput from './components/ChatInput';
import ChatList from './components/ChatList';
import DeviceList from './components/DeviceList';
import GridLayout from './components/GridLayout';
import LocalMediaList from './components/LocalMediaList';
import MediaControls from './components/MediaControls';
import PeerControls from './components/PeerControls';
import PeerList from './components/PeerList';
import Provider, { Connected, Connecting, Disconnected, Failed, NotConnected, NotSupported } from './components/Provider';
import RemoteAudioPlayer from './components/RemoteAudioPlayer';
import RemoteMediaList from './components/RemoteMediaList';
import RequestDisplayMedia from './components/RequestDisplayMedia';
import RequestUserMedia from './components/RequestUserMedia';
import Room from './components/Room';
import StayDownContainer from './components/StayDownContainer';
import UserControls from './components/UserControls';
import Video from './components/Video';
import VolumeMeter from './components/VolumeMeter';
import { Chat, DevicePermissions, Media, Peer } from './Definitions';
export { Actions, Audio, Chat, ChatComposers, ChatInput, ChatList, Connected, Connecting, DeviceList, DevicePermissions, Disconnected, Failed, GridLayout, LocalMediaList, Media, MediaControls, NotConnected, NotSupported, Peer, PeerControls, PeerList, Provider, RemoteAudioPlayer, RemoteMediaList, RequestDisplayMedia, RequestUserMedia, Room, State, StayDownContainer, UserControls, Video, VolumeMeter, reducer, Selectors };
export declare const isSupportedBrowser: boolean;
export declare const screensharing: typeof ScreenSharingHelpers;
export declare function createStore(): Store<State>;
